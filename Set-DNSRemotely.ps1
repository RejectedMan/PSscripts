# Changing DNS settings in each computer from CSV-list
# CSV must contain next fields: 'Computer'; 'AdapterName' 
# It can be generated by Get-IPConfigFromRemoteComputersV2.ps1 script

$dnsServers = "192.168.0.1", "192.168.0.2", "8.8.8.8"
$FilterString = "192.168.0.100"  ## Set address which is needed to change
$CSVListPath = "C:\Temp\IPconfigList.csv"

$IPConfigList = Import-CSV $CSVListPath -Delimiter ';' | 
Where-Object { $_.DNS -like ("*" + $FilterString + "*") -and $_.DHCP -eq "Disabled" }

#$IPConfigList
Clear-Host
Write-Host "Computers were found:"$IPConfigList.Count"`n`n"
$NewIPConfigList = @()
$ErrorList = @()
$ErrCount = 0

# Run process from each computer from list
foreach ($computer in $IPConfigList) {
    ## test connection
    if (Test-Connection $computer.Computer -Count 1 -Quiet) {
        $WinRMCheck = [bool](Test-NetConnection -ComputerName $computer.Computer -CommonTCPPort "WINRM" -InformationLevel Quiet)
        
        if ($WinRMCheck) {
            ## Setting DNS on remote computer
            Invoke-Command -ComputerName $computer.Computer -ArgumentList $computer, $dnsServers, $NewIPConfigList, $ErrCount, $ErrorList -ScriptBlock {
                param ($computer, $dnsServers, $NewIPConfigList, $ErrCount, $ErrorList)
                ## Change DNS server list
                Set-DnsClientServerAddress -InterfaceAlias $computer.AdapterName -ServerAddresses $dnsServers
                # Check errors
                if ($?) { Write-Host $computer.AdapterName": DNS settings have changed`n" } else { $ErrCount++; $ErrorList += $computer.Computer }
                ## Get new IP-config
                Write-Host $computer.Computer":" $computer.AdapterName
                $GetIPConfig = get-netIPConfiguration -InterfaceAlias $computer.AdapterName -Detailed
                $NewIPConfigList += [PSCustomObject]@{ 
                    Computer    = $GetIPConfig.ComputerName
                    AdapterName = $GetIPConfig.InterfaceAlias
                    IPAddress   = $($GetIPConfig.IPv4Address.IPAddress) -join ", "
                    DNS         = $($GetIPConfig.DNSServer.ServerAddresses) -join ", "
                }
                ## Print results on screen
                $NewIPConfigList[-1]
            }
        }
        else { Write-Host $computer.Computer": WinRM connection is unavailable" -ForegroundColor Red; $ErrorList += $computer.Computer }
    }
    else { write-host "Computer"$computer.Computer" is unavailable" -ForegroundColor Red; $ErrorList += $computer.Computer }

}
write-host "`nErrors:"$ErrCount -ForegroundColor Red
write-host "`nError server list:" -ForegroundColor Red
$ErrorList
write-host "`nOperation is completed." -ForegroundColor Green